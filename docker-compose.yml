services:
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword123}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-fraud_detection}
      MYSQL_USER: ${MYSQL_USER:-fraud_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-rootpassword123}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks: [fraud-detection-network]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysql", "-h", "localhost", "-uroot", "-p$MYSQL_ROOT_PASSWORD", "-e", "SELECT 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks: [fraud-detection-network]
    restart: unless-stopped

  app:
    image: ${APP_IMAGE:-fraud-detection-app:latest}
    env_file:
      - ${ENV_FILE:-.env}
    environment:
      DB_URL: jdbc:mysql://mysql:3306/fraud_detection?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true&autoReconnect=true&failOverReadOnly=false&maxReconnects=10
      DB_USERNAME: ${DB_USERNAME:-fraud_user}
      DB_PASSWORD: ${DB_PASSWORD:-rootpassword123}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-production}
      DOCKER_ENV: true
      SERVER_FORWARD_HEADERS_STRATEGY: framework
      SERVER_USE_FORWARD_HEADERS: "true"
      SERVER_TOMCAT_USE_RELATIVE_REDIRECTS: "true"
      MODEL_SERVICE_ENABLED: ${MODEL_SERVICE_ENABLED:-true}
      MODEL_SERVICE_URL: ${MODEL_SERVICE_URL:-http://model:8000}
      MODEL_DATA_REPO: ${MODEL_DATA_REPO:-sookmyung-final-project-2025-1/Data}
      MODEL_DEFAULT_VERSION: ${MODEL_DEFAULT_VERSION:-v1.0.0}
    expose: ["8080"]
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    networks: [fraud-detection-network]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  model:
    image: ${MODEL_IMAGE:-fraud-model:latest}
    environment:
      MODEL_VERSION: ${MODEL_VERSION:-v1}
      MODEL_BASE_DIR: /app/models
    expose: ["8000"]
    networks: [fraud-detection-network]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  nginx:
    image: nginx:alpine
    ports:
      - "8888:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      app:
        condition: service_healthy
    networks: [fraud-detection-network]
    restart: unless-stopped


volumes:
  mysql_data:
  redis_data:

networks:
  fraud-detection-network:
    driver: bridge
